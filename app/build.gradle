apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
        applicationId 'co.wasder.wasder'
        manifestPlaceholders = [HOCKEYAPP_APP_ID: "a5afb5e5b8aa435a91624b6a55fbf716"]
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            keyAlias 'wasder-release'
            keyPassword 'wasder-release-!@#'
            storeFile file('wasder-keystore.jks')
            storePassword 'wasder-keystore-!@#'
        }
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    lintOptions {
        // Turns off checks for the issue IDs you specify.
        disable 'TypographyFractions', 'TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        check 'NewApi', 'InlinedApi'
        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // if set to true (default), stops the build if errors are found.
        abortOnError false
        // if true, only report errors.
        ignoreWarnings true
        baseline file("lint-baseline.xml")
    }
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.2'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {

    // Firebase Auth
    implementation "com.google.firebase:firebase-auth:${rootProject.ext.GMS}"
    implementation "com.google.android.gms:play-services-auth:${rootProject.ext.GMS}"
    implementation "com.android.support:design:${rootProject.ext.SUPPORT}"
    implementation "com.android.support:customtabs:${rootProject.ext.SUPPORT}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.SUPPORT}"
    // Firebase Real-time Database
    implementation "com.google.firebase:firebase-database:${rootProject.ext.GMS}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.SUPPORT}"
    implementation "com.android.support:support-v4:${rootProject.ext.SUPPORT}"
    // Firebase Firestore
    implementation "com.google.firebase:firebase-firestore:${rootProject.ext.GMS}"
    // Firebase Storage
    implementation "com.google.firebase:firebase-storage:${rootProject.ext.GMS}"
    implementation "com.android.support:appcompat-v7:${rootProject.ext.SUPPORT}"
    implementation "com.android.support:palette-v7:${rootProject.ext.SUPPORT}"
    // Support
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAINTLAYOUT"
    implementation "com.android.support:support-vector-drawable:${rootProject.ext.SUPPORT}"
    implementation "com.android.support:mediarouter-v7:${rootProject.ext.SUPPORT}"
    implementation "com.android.support:multidex:${rootProject.ext.MULTIDEX}"
    implementation "com.google.android.gms:play-services:${rootProject.ext.GMS}"
    //Firebase Job Dispatcher
    implementation "com.firebase:firebase-jobdispatcher:${rootProject.ext.FIREBASEJOBDISPATCHER}"
    // Other Firebase/Play services dependencies
    implementation "com.google.firebase:firebase-core:${rootProject.ext.GMS}"
    implementation "com.google.firebase:firebase-config:${rootProject.ext.GMS}"
    implementation "com.google.firebase:firebase-invites:${rootProject.ext.GMS}"
    implementation "com.google.firebase:firebase-messaging:${rootProject.ext.GMS}"
    implementation "com.google.firebase:firebase-appindexing:${rootProject.ext.GMS}"
    implementation "com.facebook.android:facebook-android-sdk:${rootProject.ext.FACEBOOKSDK}"
    // FirebaseUI
    implementation "com.firebaseui:firebase-ui-auth:${rootProject.ext.FIREBASEUI}"
    implementation "com.firebaseui:firebase-ui-firestore:${rootProject.ext.FIREBASEUI}"
    implementation "com.firebaseui:firebase-ui-storage:${rootProject.ext.FIREBASEUI}"
    implementation "com.firebaseui:firebase-ui-database:${rootProject.ext.FIREBASEUI}"
    // ButterKnife
    implementation "com.jakewharton:butterknife:${rootProject.ext.BUTTERKNIFE}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.BUTTERKNIFE}"
    // Support Libs
    implementation "com.android.support:support-annotations:${rootProject.ext.SUPPORT}"
    // Android Architecture Components
    implementation "android.arch.lifecycle:runtime:${rootProject.ext.ARCHRUNTIME}"
    implementation "android.arch.lifecycle:extensions:${rootProject.ext.ARCHEXTENSIONS}"
    annotationProcessor "android.arch.lifecycle:compiler:${rootProject.ext.ARCHCOMPILER}"
    // Third-party libraries
    implementation "me.zhanghai.android.materialratingbar:library:${rootProject.ext.MATERIALRATINGBAR}"
    implementation "com.github.bumptech.glide:glide:${rootProject.ext.GLIDE}"
    implementation 'net.hockeyapp.android:HockeySDK:5.0.3'
    annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.GLIDE}"
    implementation("com.crashlytics.sdk.android:crashlytics:${rootProject.ext.CRASHLYTICS}") {
        transitive = true
    }
    implementation("com.appsee:appsee-android:${rootProject.ext.APPSEE}") {
        transitive = true
    }
    implementation("io.fabric.sdk.android:fabric:${rootProject.ext.FABRIC}") {
        transitive = true
    }
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.ext.SUPPORTTEST}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${rootProject.ext.SUPPORTTEST}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
}
apply plugin: 'com.google.gms.google-services'